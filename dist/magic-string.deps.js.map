{"version":3,"file":"magic-string.deps.js","sources":["../src/MagicString/index.js","../src/MagicString/encodeMappings.js","../src/utils/encode.js","../node_modules/vlq/src/vlq.js","../src/MagicString/guessIndent.js","../src/Bundle/index.js","../src/utils/hasOwnProp.js","../src/utils/getRelativePath.js","../src/SourceMap/index.js","../src/utils/btoa.js"],"sourcesContent":["import Bundle from '../Bundle';\nimport SourceMap from '../SourceMap';\nimport guessIndent from './guessIndent';\nimport encodeMappings from './encodeMappings';\nimport getRelativePath from '../utils/getRelativePath';\n\nlet warned = false;\n\nclass MagicString {\n\tconstructor ( string, options = {} ) {\n\t\tthis.original = this.str = string;\n\t\tthis.mappings = initMappings( string.length );\n\n\t\tthis.filename = options.filename;\n\t\tthis.indentExclusionRanges = options.indentExclusionRanges;\n\n\t\tthis.sourcemapLocations = {};\n\n\t\tthis.indentStr = guessIndent( string );\n\t}\n\n\taddSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t}\n\n\tappend ( content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'appended content must be a string' );\n\t\t}\n\n\t\tthis.str += content;\n\t\treturn this;\n\t}\n\n\tclone () {\n\t\tvar clone, i;\n\n\t\tclone = new MagicString( this.original, { filename: this.filename });\n\t\tclone.str = this.str;\n\n\t\ti = clone.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tclone.mappings[i] = this.mappings[i];\n\t\t}\n\n\t\treturn clone;\n\t}\n\n\tgenerateMap ( options ) {\n\t\toptions = options || {};\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames: [],\n\t\t\tmappings: this.getMappings( options.hires, 0 )\n\t\t});\n\t}\n\n\tgetIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tgetMappings ( hires, sourceIndex, offsets ) {\n\t\treturn encodeMappings( this.original, this.str, this.mappings, hires, this.sourcemapLocations, sourceIndex, offsets );\n\t}\n\n\tindent ( indentStr, options ) {\n\t\tvar self = this,\n\t\t\tmappings = this.mappings,\n\t\t\treverseMappings = reverse( mappings, this.str.length ),\n\t\t\tpattern = /^[^\\r\\n]/gm,\n\t\t\tmatch,\n\t\t\tinserts = [],\n\t\t\tadjustments,\n\t\t\texclusions,\n\t\t\tlastEnd,\n\t\t\ti;\n\n\t\tif ( typeof indentStr === 'object' ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tif ( options.exclude ) {\n\t\t\texclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\n\t\t\texclusions = exclusions.map( function ( range ) {\n\t\t\t\tvar rangeStart, rangeEnd;\n\n\t\t\t\trangeStart = self.locate( range[0] );\n\t\t\t\trangeEnd = self.locate( range[1] );\n\n\t\t\t\tif ( rangeStart === null || rangeEnd === null ) {\n\t\t\t\t\tthrow new Error( 'Cannot use indices of replaced characters as exclusion ranges' );\n\t\t\t\t}\n\n\t\t\t\treturn [ rangeStart, rangeEnd ];\n\t\t\t});\n\n\t\t\texclusions.sort( function ( a, b ) {\n\t\t\t\treturn a[0] - b[0];\n\t\t\t});\n\n\t\t\t// check for overlaps\n\t\t\tlastEnd = -1;\n\t\t\texclusions.forEach( function ( range ) {\n\t\t\t\tif ( range[0] < lastEnd ) {\n\t\t\t\t\tthrow new Error( 'Exclusion ranges cannot overlap' );\n\t\t\t\t}\n\n\t\t\t\tlastEnd = range[1];\n\t\t\t});\n\t\t}\n\n\t\tif ( !exclusions ) {\n\t\t\twhile ( match = pattern.exec( this.str ) ) {\n\t\t\t\tinserts.push( match.index );\n\t\t\t}\n\n\t\t\tthis.str = this.str.replace( pattern, indentStr + '$&' );\n\t\t} else {\n\t\t\twhile ( match = pattern.exec( this.str ) ) {\n\t\t\t\tif ( !isExcluded( match.index - 1 ) ) {\n\t\t\t\t\tinserts.push( match.index );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.str = this.str.replace( pattern, function ( match, index ) {\n\t\t\t\treturn isExcluded( index - 1 ) ? match : indentStr + match;\n\t\t\t});\n\t\t}\n\n\t\tadjustments = inserts.map( function ( index ) {\n\t\t\tvar origin;\n\n\t\t\tdo {\n\t\t\t\torigin = reverseMappings[ index++ ];\n\t\t\t} while ( !~origin && index < self.str.length );\n\n\t\t\treturn origin;\n\t\t});\n\n\t\ti = adjustments.length;\n\t\tlastEnd = this.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tadjust( self.mappings, adjustments[i], lastEnd, ( ( i + 1 ) * indentStr.length ) );\n\t\t\tlastEnd = adjustments[i];\n\t\t}\n\n\t\treturn this;\n\n\t\tfunction isExcluded ( index ) {\n\t\t\tvar i = exclusions.length, range;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\trange = exclusions[i];\n\n\t\t\t\tif ( range[1] < index ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif ( range[0] <= index ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tinsert ( index, content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'inserted content must be a string' );\n\t\t}\n\n\t\tif ( index === this.original.length ) {\n\t\t\tthis.append( content );\n\t\t} else {\n\t\t\tvar mapped = this.locate(index);\n\n\t\t\tif ( mapped === null ) {\n\t\t\t\tthrow new Error( 'Cannot insert at replaced character index: ' + index );\n\t\t\t}\n\n\t\t\tthis.str = this.str.substr( 0, mapped ) + content + this.str.substr( mapped );\n\t\t\tadjust( this.mappings, index, this.mappings.length, content.length );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// get current location of character in original string\n\tlocate ( character ) {\n\t\tvar loc;\n\n\t\tif ( character < 0 || character > this.mappings.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tloc = this.mappings[ character ];\n\t\treturn ~loc ? loc : null;\n\t}\n\n\tlocateOrigin ( character ) {\n\t\tvar i;\n\n\t\tif ( character < 0 || character >= this.str.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\ti = this.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( this.mappings[i] === character ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\toverwrite ( start, end, content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'replacement content must be a string' );\n\t\t}\n\n\t\tvar firstChar, lastChar, d;\n\n\t\tfirstChar = this.locate( start );\n\t\tlastChar = this.locate( end - 1 );\n\n\t\tif ( firstChar === null || lastChar === null ) {\n\t\t\tthrow new Error( 'Cannot replace the same content twice' );\n\t\t}\n\n\t\tif ( firstChar > lastChar + 1 ) {\n\t\t\tthrow new Error(\n\t\t\t\t'BUG! First character mapped to a position after the last character: ' +\n\t\t\t\t'[' + start + ', ' + end + '] -> [' + firstChar + ', ' + ( lastChar + 1 ) + ']'\n\t\t\t);\n\t\t}\n\n\t\tthis.str = this.str.substr( 0, firstChar ) + content + this.str.substring( lastChar + 1 );\n\n\t\td = content.length - ( lastChar + 1 - firstChar );\n\n\t\tblank( this.mappings, start, end );\n\t\tadjust( this.mappings, end, this.mappings.length, d );\n\t\treturn this;\n\t}\n\n\tprepend ( content ) {\n\t\tthis.str = content + this.str;\n\t\tadjust( this.mappings, 0, this.mappings.length, content.length );\n\t\treturn this;\n\t}\n\n\tremove ( start, end ) {\n\t\tvar loc, d, i, currentStart, currentEnd;\n\n\t\tif ( start < 0 || end > this.mappings.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\td = 0;\n\t\tcurrentStart = -1;\n\t\tcurrentEnd = -1;\n\t\tfor ( i = start; i < end; i += 1 ) {\n\t\t\tloc = this.mappings[i];\n\n\t\t\tif ( loc !== -1 ) {\n\t\t\t\tif ( !~currentStart ) {\n\t\t\t\t\tcurrentStart = loc;\n\t\t\t\t}\n\n\t\t\t\tcurrentEnd = loc + 1;\n\n\t\t\t\tthis.mappings[i] = -1;\n\t\t\t\td += 1;\n\t\t\t}\n\t\t}\n\n\t\tthis.str = this.str.slice( 0, currentStart ) + this.str.slice( currentEnd );\n\n\t\tadjust( this.mappings, end, this.mappings.length, -d );\n\t\treturn this;\n\t}\n\n\treplace ( start, end, content ) {\n\t\tif ( !warned ) {\n\t\t\tconsole.warn( 'magicString.replace(...) is deprecated. Use magicString.overwrite(...) instead' );\n\t\t\twarned = true;\n\t\t}\n\n\t\treturn this.overwrite( start, end, content );\n\t}\n\n\tslice ( start, end ) {\n\t\tvar firstChar, lastChar;\n\n\t\tfirstChar = this.locate( start );\n\t\tlastChar = this.locate( end - 1 ) + 1;\n\n\t\tif ( firstChar === null || lastChar === null ) {\n\t\t\tthrow new Error( 'Cannot use replaced characters as slice anchors' );\n\t\t}\n\n\t\treturn this.str.slice( firstChar, lastChar );\n\t}\n\n\tsnip ( start, end ) {\n\t\tconst clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t}\n\n\ttoString () {\n\t\treturn this.str;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim (charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEnd (charType) {\n\t\tvar self = this;\n\t\tvar rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.str = this.str.replace( rx, function ( trailing, index, str ) {\n\t\t\tvar strLength = str.length,\n\t\t\t\tlength = trailing.length,\n\t\t\t\ti,\n\t\t\t\tchars = [];\n\n\t\t\ti = strLength;\n\t\t\twhile ( i-- > strLength - length ) {\n\t\t\t\tchars.push( self.locateOrigin( i ) );\n\t\t\t}\n\n\t\t\ti = chars.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( chars[i] !== null ) {\n\t\t\t\t\tself.mappings[ chars[i] ] = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn this;\n\t}\n\n\ttrimStart (charType) {\n\t\tvar self = this;\n\t\tvar rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.str = this.str.replace( rx, function ( leading ) {\n\t\t\tvar length = leading.length, i, chars = [], adjustmentStart = 0;\n\n\t\t\ti = length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tchars.push( self.locateOrigin( i ) );\n\t\t\t}\n\n\t\t\ti = chars.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( chars[i] !== null ) {\n\t\t\t\t\tself.mappings[ chars[i] ] = -1;\n\t\t\t\t\tadjustmentStart += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tadjust( self.mappings, adjustmentStart, self.mappings.length, -length );\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn this;\n\t}\n}\n\nMagicString.Bundle = Bundle;\n\nfunction adjust ( mappings, start, end, d ) {\n\tvar i = end;\n\n\tif ( !d ) return; // replacement is same length as replaced string\n\n\twhile ( i-- > start ) {\n\t\tif ( ~mappings[i] ) {\n\t\t\tmappings[i] += d;\n\t\t}\n\t}\n}\n\nfunction initMappings ( i ) {\n\tvar mappings = new Uint32Array( i );\n\n\twhile ( i-- ) {\n\t\tmappings[i] = i;\n\t}\n\n\treturn mappings;\n}\n\nfunction blank ( mappings, start, i ) {\n\twhile ( i-- > start ) {\n\t\tmappings[i] = -1;\n\t}\n}\n\nfunction reverse ( mappings, i ) {\n\tvar result, location;\n\n\tresult = new Uint32Array( i );\n\n\twhile ( i-- ) {\n\t\tresult[i] = -1;\n\t}\n\n\ti = mappings.length;\n\twhile ( i-- ) {\n\t\tlocation = mappings[i];\n\n\t\tif ( ~location ) {\n\t\t\tresult[ location ] = i;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport default MagicString;\n","import encode from '../utils/encode';\n\nexport default function encodeMappings ( original, str, mappings, hires, sourcemapLocations, sourceIndex, offsets ) {\n\t// store locations, for fast lookup\n\tlet lineStart = 0;\n\tconst locations = original.split( '\\n' ).map( line => {\n\t\tvar start = lineStart;\n\t\tlineStart += line.length + 1; // +1 for the newline\n\n\t\treturn start;\n\t});\n\n\tconst inverseMappings = invert( str, mappings );\n\n\tlet charOffset = 0;\n\tconst lines = str.split( '\\n' ).map( line => {\n\t\tlet segments = [];\n\n\t\tlet char; // TODO put these inside loop, once we've determined it's safe to do so transpilation-wise\n\t\tlet origin;\n\t\tlet lastOrigin;\n\t\tlet location;\n\n\t\tlet i;\n\n\t\tconst len = line.length;\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tchar = i + charOffset;\n\t\t\torigin = inverseMappings[ char ];\n\n\t\t\tif ( !~origin ) {\n\t\t\t\tif ( !~lastOrigin ) {\n\t\t\t\t\t// do nothing\n\t\t\t\t} else {\n\t\t\t\t\tsegments.push({\n\t\t\t\t\t\tgeneratedCodeColumn: i,\n\t\t\t\t\t\tsourceIndex: sourceIndex,\n\t\t\t\t\t\tsourceCodeLine: 0,\n\t\t\t\t\t\tsourceCodeColumn: 0\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tif ( !hires && ( origin === lastOrigin + 1 ) && !sourcemapLocations[ origin ] ) {\n\t\t\t\t\t// do nothing\n\t\t\t\t} else {\n\t\t\t\t\tlocation = getLocation( locations, origin );\n\n\t\t\t\t\tsegments.push({\n\t\t\t\t\t\tgeneratedCodeColumn: i,\n\t\t\t\t\t\tsourceIndex: sourceIndex,\n\t\t\t\t\t\tsourceCodeLine: location.line,\n\t\t\t\t\t\tsourceCodeColumn: location.column\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastOrigin = origin;\n\t\t}\n\n\t\tcharOffset += line.length + 1;\n\t\treturn segments;\n\t});\n\n\toffsets = offsets || {};\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\n\tconst encoded = lines.map( segments => {\n\t\tvar generatedCodeColumn = 0;\n\n\t\treturn segments.map( segment => {\n\t\t\tconst arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' );\n\n\treturn encoded;\n}\n\n\nfunction invert ( str, mappings ) {\n\tvar inverted = new Uint32Array( str.length ), i;\n\n\t// initialise everything to -1\n\ti = str.length;\n\twhile ( i-- ) {\n\t\tinverted[i] = -1;\n\t}\n\n\t// then apply the actual mappings\n\ti = mappings.length;\n\twhile ( i-- ) {\n\t\tif ( ~mappings[i] ) {\n\t\t\tinverted[ mappings[i] ] = i;\n\t\t}\n\t}\n\n\treturn inverted;\n}\n\nfunction getLocation ( locations, char ) {\n\tvar i;\n\n\ti = locations.length;\n\twhile ( i-- ) {\n\t\tif ( locations[i] <= char ) {\n\t\t\treturn {\n\t\t\t\tline: i,\n\t\t\t\tcolumn: char - locations[i]\n\t\t\t};\n\t\t}\n\t}\n\n\tthrow new Error( 'Character out of bounds' );\n}\n","import { encode } from 'vlq';\nexport default encode;","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nexport function decode ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function encode ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n","export default function guessIndent ( code ) {\n\tconst lines = code.split( '\\n' );\n\n\tconst tabbed = lines.filter( line => /^\\t+/.test( line ) );\n\tconst spaced = lines.filter( line => /^ {2,}/.test( line ) );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce( ( previous, current ) => {\n\t\tvar numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n","import MagicString from '../MagicString/index';\nimport SourceMap from '../SourceMap';\nimport getRelativePath from '../utils/getRelativePath';\nimport hasOwnProp from '../utils/hasOwnProp';\n\nclass Bundle {\n\tconstructor ( options = {} ) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.outro = options.outro || '';\n\t\tthis.separator = 'separator' in options ? options.separator : '\\n';\n\n\t\tthis.sources = [];\n\t}\n\n\taddSource ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename\n\t\t\t});\n\t\t}\n\n\t\tif ( typeof source !== 'object' || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\tif ( !hasOwnProp.call( source, 'filename' ) ) source.filename = source.content.filename;\n\t\tif ( !hasOwnProp.call( source, 'indentExclusionRanges' ) ) source.indentExclusionRanges = source.content.indentExclusionRanges;\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t}\n\n\tappend ( str ) {\n\t\tthis.outro += str;\n\t\treturn this;\n\t}\n\n\tclone () {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\toutro: this.outro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( source => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone()\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateMap ( options ) {\n\t\tconst encodingSeparator = getSemis( this.separator );\n\n\t\tlet offsets = {};\n\n\t\tconst encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( function ( source, sourceIndex) {\n\t\t\t\treturn source.content.getMappings( options.hires, sourceIndex, offsets );\n\t\t\t}).join( encodingSeparator ) +\n\t\t\tgetSemis( this.outro )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.sources.map( source => {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.sources.map( source => {\n\t\t\t\treturn options.includeContent ? source.content.original : null;\n\t\t\t}),\n\t\t\tnames: [],\n\t\t\tmappings: encoded\n\t\t});\n\t}\n\n\tgetIndentString () {\n\t\tlet indentStringCounts = {};\n\n\t\tthis.sources.forEach( source => {\n\t\t\tvar indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( ( a, b ) => {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t}\n\n\tindent ( indentStr ) {\n\t\tif ( !indentStr ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tthis.sources.forEach( source => {\n\t\t\tsource.content.indent( indentStr, { exclude: source.indentExclusionRanges });\n\t\t});\n\n\t\tthis.intro = this.intro.replace( /^[^\\n]/gm, indentStr + '$&' );\n\t\tthis.outro = this.outro.replace( /^[^\\n]/gm, indentStr + '$&' );\n\n\t\treturn this;\n\t}\n\n\tprepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString () {\n\t\treturn this.intro + this.sources.map( stringify ).join( this.separator ) + this.outro;\n\t}\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t}\n\n\ttrimStart ( charType ) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tlet source; // TODO put inside loop if safe\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tthis.outro = this.outro.replace( rx, '' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart();\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.str === '' );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd ( charType ) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\t\tthis.outro = this.outro.replace( rx, '' );\n\n\t\tif ( !this.outro ) {\n\t\t\tlet source;\n\t\t\tlet i = this.sources.length - 1;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimEnd(charType);\n\t\t\t\ti -= 1;\n\t\t\t} while ( source.content.str === '' );\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\nexport default Bundle;\n\nfunction stringify ( source ) {\n\treturn source.content.toString();\n}\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n","export default Object.prototype.hasOwnProperty;","export default function getRelativePath ( from, to ) {\n\tlet fromParts = from.split( /[\\/\\\\]/ );\n\tlet toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tlet i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n","import btoa from '../utils/btoa';\n\nclass SourceMap {\n\tconstructor ( properties ) {\n\t\tthis.version = 3;\n\n\t\tthis.file           = properties.file;\n\t\tthis.sources        = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names          = properties.names;\n\t\tthis.mappings       = properties.mappings;\n\t}\n\n\ttoString () {\n\t\treturn JSON.stringify( this );\n\t}\n\n\ttoUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n}\n\nexport default SourceMap;","var _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t_btoa = str => new Buffer( str ).toString( 'base64' );\n} else {\n\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n}\n\nexport default _btoa;"],"names":[],"mappings":"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"}