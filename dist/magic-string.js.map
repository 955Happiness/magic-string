{"version":3,"file":"magic-string.js","sources":["../src/index.js","../src/Bundle/index.js","../src/utils/hasOwnProp.js","../src/MagicString/index.js","../src/MagicString/guessIndent.js","../src/MagicString/encodeMappings.js","../src/utils/SourceMap.js","../src/utils/btoa.js","../src/utils/getRelativePath.js"],"sourcesContent":["import MagicString from './MagicString/index';\nimport Bundle from './Bundle/index';\n\nMagicString.Bundle = Bundle;\n\nexport default MagicString;\n","import MagicString from '../MagicString/index';\nimport SourceMap from '../utils/SourceMap';\nimport getRelativePath from '../utils/getRelativePath';\nimport hasOwnProp from '../utils/hasOwnProp';\n\nclass Bundle {\n\tconstructor ( options = {} ) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.outro = options.outro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\t\tthis.sources = [];\n\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( typeof source !== 'object' || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( option => {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( `Illegal source: same filename (${source.filename}), different contents` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t}\n\n\tappend ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone () {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\toutro: this.outro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( source => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateMap ( options ) {\n\t\tlet offsets = {};\n\n\t\tlet names = [];\n\t\tthis.sources.forEach( source => {\n\t\t\tObject.keys( source.content.nameLocations ).forEach( location => {\n\t\t\t\tconst name = source.content.nameLocations[ location ];\n\t\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t\t});\n\t\t});\n\n\t\tconst encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( ( source, i ) => {\n\t\t\t\tconst prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';\n\t\t\t\tlet mappings;\n\n\t\t\t\t// we don't bother encoding sources without a filename\n\t\t\t\tif ( !source.filename ) {\n\t\t\t\t\tmappings = getSemis( source.content.toString() );\n\t\t\t\t} else {\n\t\t\t\t\tconst sourceIndex = this.uniqueSourceIndexByFilename[ source.filename ];\n\t\t\t\t\tmappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );\n\t\t\t\t}\n\n\t\t\t\treturn prefix + mappings;\n\t\t\t}).join( '' ) +\n\t\t\tgetSemis( this.outro )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( source => {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( source => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: encoded\n\t\t});\n\t}\n\n\tgetIndentString () {\n\t\tlet indentStringCounts = {};\n\n\t\tthis.sources.forEach( source => {\n\t\t\tconst indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( ( a, b ) => {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t}\n\n\tindent ( indentStr ) {\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.str.slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, ( match, index ) => {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\tthis.outro = this.outro.replace( /^[^\\n]/gm, indentStr + '$&' );\n\n\t\treturn this;\n\t}\n\n\tprepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString () {\n\t\tconst body = this.sources.map( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tlet str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body + this.outro;\n\t}\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t}\n\n\ttrimStart ( charType ) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tlet source; // TODO put inside loop if safe\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tthis.outro = this.outro.replace( rx, '' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart();\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.str === '' );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd ( charType ) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\t\tthis.outro = this.outro.replace( rx, '' );\n\n\t\tif ( !this.outro ) {\n\t\t\tlet source;\n\t\t\tlet i = this.sources.length - 1;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimEnd(charType);\n\t\t\t\ti -= 1;\n\t\t\t} while ( source.content.str === '' );\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\nexport default Bundle;\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n","export default Object.prototype.hasOwnProperty;","import SourceMap from '../utils/SourceMap';\nimport guessIndent from './guessIndent';\nimport encodeMappings from './encodeMappings';\nimport getRelativePath from '../utils/getRelativePath';\n\nlet warned = false;\n\nclass MagicString {\n\tconstructor ( string, options = {} ) {\n\t\tthis.original = this.str = string;\n\t\tthis.mappings = initMappings( string.length );\n\n\t\tthis.filename = options.filename;\n\t\tthis.indentExclusionRanges = options.indentExclusionRanges;\n\n\t\tthis.sourcemapLocations = {};\n\t\tthis.nameLocations = {};\n\n\t\tthis.indentStr = guessIndent( string );\n\t}\n\n\taddSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t}\n\n\tappend ( content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'appended content must be a string' );\n\t\t}\n\n\t\tthis.str += content;\n\t\treturn this;\n\t}\n\n\tclone () {\n\t\tlet clone = new MagicString( this.original, { filename: this.filename });\n\t\tclone.str = this.str;\n\n\t\tlet i = clone.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tclone.mappings[i] = this.mappings[i];\n\t\t}\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tclone.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( ([ start, end ]) => [ start, end ] );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( loc => {\n\t\t\tclone.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn clone;\n\t}\n\n\tgenerateMap ( options ) {\n\t\toptions = options || {};\n\n\t\tlet names = [];\n\t\tObject.keys( this.nameLocations ).forEach( location => {\n\t\t\tconst name = this.nameLocations[ location ];\n\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t});\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames,\n\t\t\tmappings: this.getMappings( options.hires, 0, {}, names )\n\t\t});\n\t}\n\n\tgetIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tgetMappings ( hires, sourceIndex, offsets, names ) {\n\t\treturn encodeMappings( this.original, this.str, this.mappings, hires, this.sourcemapLocations, sourceIndex, offsets, names, this.nameLocations );\n\t}\n\n\tindent ( indentStr, options ) {\n\t\tconst mappings = this.mappings;\n\t\tconst reverseMappings = reverse( mappings, this.str.length );\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( typeof indentStr === 'object' ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tlet exclusions;\n\n\t\tif ( options.exclude ) {\n\t\t\texclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\n\t\t\texclusions = exclusions.map( range => {\n\t\t\t\tconst rangeStart = this.locate( range[0] );\n\t\t\t\tconst rangeEnd = this.locate( range[1] );\n\n\t\t\t\tif ( rangeStart === null || rangeEnd === null ) {\n\t\t\t\t\tthrow new Error( 'Cannot use indices of replaced characters as exclusion ranges' );\n\t\t\t\t}\n\n\t\t\t\treturn [ rangeStart, rangeEnd ];\n\t\t\t});\n\n\t\t\texclusions.sort( ( a, b ) => a[0] - b[0] );\n\n\t\t\t// check for overlaps\n\t\t\tlastEnd = -1;\n\t\t\texclusions.forEach( range => {\n\t\t\t\tif ( range[0] < lastEnd ) {\n\t\t\t\t\tthrow new Error( 'Exclusion ranges cannot overlap' );\n\t\t\t\t}\n\n\t\t\t\tlastEnd = range[1];\n\t\t\t});\n\t\t}\n\n\t\tconst indentStart = options.indentStart !== false;\n\t\tlet inserts = [];\n\n\t\tif ( !exclusions ) {\n\t\t\tthis.str = this.str.replace( pattern, ( match, index ) => {\n\t\t\t\tif ( !indentStart && index === 0 ) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\n\t\t\t\tinserts.push( index );\n\t\t\t\treturn indentStr + match;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.str = this.str.replace( pattern, ( match, index ) => {\n\t\t\t\tif ( ( !indentStart && index === 0 ) || isExcluded( index - 1 ) ) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\n\t\t\t\tinserts.push( index );\n\t\t\t\treturn indentStr + match;\n\t\t\t});\n\t\t}\n\n\t\tconst adjustments = inserts.map( index => {\n\t\t\tlet origin;\n\n\t\t\tdo {\n\t\t\t\torigin = reverseMappings[ index++ ];\n\t\t\t} while ( !~origin && index < this.str.length );\n\n\t\t\treturn origin;\n\t\t});\n\n\t\tlet i = adjustments.length;\n\t\tlet lastEnd = this.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tadjust( this.mappings, adjustments[i], lastEnd, ( ( i + 1 ) * indentStr.length ) );\n\t\t\tlastEnd = adjustments[i];\n\t\t}\n\n\t\treturn this;\n\n\t\tfunction isExcluded ( index ) {\n\t\t\tlet i = exclusions.length;\n\t\t\tlet range;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\trange = exclusions[i];\n\n\t\t\t\tif ( range[1] < index ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif ( range[0] <= index ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tinsert ( index, content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'inserted content must be a string' );\n\t\t}\n\n\t\tif ( index === this.original.length ) {\n\t\t\tthis.append( content );\n\t\t} else {\n\t\t\tconst mapped = this.locate( index );\n\n\t\t\tif ( mapped === null ) {\n\t\t\t\tthrow new Error( 'Cannot insert at replaced character index: ' + index );\n\t\t\t}\n\n\t\t\tthis.str = this.str.substr( 0, mapped ) + content + this.str.substr( mapped );\n\t\t\tadjust( this.mappings, index, this.mappings.length, content.length );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// get current location of character in original string\n\tlocate ( character ) {\n\t\tif ( character < 0 || character > this.mappings.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tconst loc = this.mappings[ character ];\n\t\treturn ~loc ? loc : null;\n\t}\n\n\tlocateOrigin ( character ) {\n\t\tif ( character < 0 || character >= this.str.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tlet i = this.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( this.mappings[i] === character ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\toverwrite ( start, end, content, storeName ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'replacement content must be a string' );\n\t\t}\n\n\t\tconst firstChar = this.locate( start );\n\t\tconst lastChar = this.locate( end - 1 );\n\n\t\tif ( firstChar === null || lastChar === null ) {\n\t\t\tthrow new Error( `Cannot overwrite the same content twice: '${this.original.slice(start, end).replace(/\\n/g, '\\\\n')}'` );\n\t\t}\n\n\t\tif ( firstChar > lastChar + 1 ) {\n\t\t\tthrow new Error(\n\t\t\t\t'BUG! First character mapped to a position after the last character: ' +\n\t\t\t\t'[' + start + ', ' + end + '] -> [' + firstChar + ', ' + ( lastChar + 1 ) + ']'\n\t\t\t);\n\t\t}\n\n\t\tif ( storeName ) {\n\t\t\tthis.nameLocations[ start ] = this.original.slice( start, end );\n\t\t}\n\n\t\tthis.str = this.str.substr( 0, firstChar ) + content + this.str.substring( lastChar + 1 );\n\n\t\tconst d = content.length - ( lastChar + 1 - firstChar );\n\n\t\tblank( this.mappings, start, end );\n\t\tadjust( this.mappings, end, this.mappings.length, d );\n\t\treturn this;\n\t}\n\n\tprepend ( content ) {\n\t\tthis.str = content + this.str;\n\t\tadjust( this.mappings, 0, this.mappings.length, content.length );\n\t\treturn this;\n\t}\n\n\tremove ( start, end ) {\n\t\tif ( start < 0 || end > this.mappings.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tlet currentStart = -1;\n\t\tlet currentEnd = -1;\n\t\tfor ( let i = start; i < end; i += 1 ) {\n\t\t\tconst loc = this.mappings[i];\n\n\t\t\tif ( ~loc ) {\n\t\t\t\tif ( !~currentStart ) currentStart = loc;\n\n\t\t\t\tcurrentEnd = loc + 1;\n\t\t\t\tthis.mappings[i] = -1;\n\t\t\t}\n\t\t}\n\n\t\tthis.str = this.str.slice( 0, currentStart ) + this.str.slice( currentEnd );\n\n\t\tadjust( this.mappings, end, this.mappings.length, currentStart - currentEnd );\n\t\treturn this;\n\t}\n\n\treplace ( start, end, content ) {\n\t\tif ( !warned ) {\n\t\t\tconsole.warn( 'magicString.replace(...) is deprecated. Use magicString.overwrite(...) instead' );\n\t\t\twarned = true;\n\t\t}\n\n\t\treturn this.overwrite( start, end, content );\n\t}\n\n\tslice ( start, end = this.original.length ) {\n\t\twhile ( start < 0 ) start += this.original.length;\n\t\twhile ( end < 0 ) end += this.original.length;\n\n\t\tconst firstChar = this.locate( start );\n\t\tconst lastChar = this.locate( end - 1 );\n\n\t\tif ( firstChar === null || lastChar === null ) {\n\t\t\tthrow new Error( 'Cannot use replaced characters as slice anchors' );\n\t\t}\n\n\t\treturn this.str.slice( firstChar, lastChar + 1 );\n\t}\n\n\tsnip ( start, end ) {\n\t\tconst clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t}\n\n\ttoString () {\n\t\treturn this.str;\n\t}\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim (charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEnd (charType) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.str = this.str.replace( rx, ( trailing, index, str ) => {\n\t\t\tconst strLength = str.length;\n\t\t\tconst length = trailing.length;\n\n\t\t\tlet chars = [];\n\n\t\t\tlet i = strLength;\n\t\t\twhile ( i-- > strLength - length ) {\n\t\t\t\tchars.push( this.locateOrigin( i ) );\n\t\t\t}\n\n\t\t\ti = chars.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( chars[i] !== null ) {\n\t\t\t\t\tthis.mappings[ chars[i] ] = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn this;\n\t}\n\n\ttrimStart (charType) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.str = this.str.replace( rx, leading => {\n\t\t\tconst length = leading.length;\n\n\t\t\tlet chars = [];\n\t\t\tlet adjustmentStart = 0;\n\n\t\t\tlet i = length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tchars.push( this.locateOrigin( i ) );\n\t\t\t}\n\n\t\t\ti = chars.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( chars[i] !== null ) {\n\t\t\t\t\tthis.mappings[ chars[i] ] = -1;\n\t\t\t\t\tadjustmentStart += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tadjust( this.mappings, adjustmentStart, this.mappings.length, -length );\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn this;\n\t}\n}\n\nfunction adjust ( mappings, start, end, d ) {\n\tif ( !d ) return; // replacement is same length as replaced string\n\n\tlet i = end;\n\twhile ( i-- > start ) {\n\t\tif ( ~mappings[i] ) {\n\t\t\tmappings[i] += d;\n\t\t}\n\t}\n}\n\nfunction initMappings ( i ) {\n\tlet mappings = new Uint32Array( i );\n\n\twhile ( i-- ) mappings[i] = i;\n\treturn mappings;\n}\n\nfunction blank ( mappings, start, i ) {\n\twhile ( i-- > start ) mappings[i] = -1;\n}\n\nfunction reverse ( mappings, i ) {\n\tlet result = new Uint32Array( i );\n\n\twhile ( i-- ) {\n\t\tresult[i] = -1;\n\t}\n\n\tlet location;\n\ti = mappings.length;\n\twhile ( i-- ) {\n\t\tlocation = mappings[i];\n\n\t\tif ( ~location ) {\n\t\t\tresult[ location ] = i;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport default MagicString;\n","export default function guessIndent ( code ) {\n\tconst lines = code.split( '\\n' );\n\n\tconst tabbed = lines.filter( line => /^\\t+/.test( line ) );\n\tconst spaced = lines.filter( line => /^ {2,}/.test( line ) );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce( ( previous, current ) => {\n\t\tconst numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n","import { encode } from 'vlq';\n\nexport default function encodeMappings ( original, str, mappings, hires, sourcemapLocations, sourceIndex, offsets, names, nameLocations ) {\n\t// store locations, for fast lookup\n\tlet lineStart = 0;\n\tconst locations = original.split( '\\n' ).map( line => {\n\t\tconst start = lineStart;\n\t\tlineStart += line.length + 1; // +1 for the newline\n\n\t\treturn start;\n\t});\n\n\tconst inverseMappings = invert( str, mappings );\n\n\tlet charOffset = 0;\n\tconst lines = str.split( '\\n' ).map( line => {\n\t\tlet segments = [];\n\n\t\tlet char; // TODO put these inside loop, once we've determined it's safe to do so transpilation-wise\n\t\tlet origin;\n\t\tlet lastOrigin = -1;\n\t\tlet location;\n\t\tlet nameIndex;\n\n\t\tlet i;\n\n\t\tconst len = line.length;\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tchar = i + charOffset;\n\t\t\torigin = inverseMappings[ char ];\n\n\t\t\tnameIndex = -1;\n\t\t\tlocation = null;\n\n\t\t\t// if this character has no mapping, but the last one did,\n\t\t\t// create a new segment\n\t\t\tif ( !~origin && ~lastOrigin ) {\n\t\t\t\tlocation = getLocation( locations, lastOrigin + 1 );\n\n\t\t\t\tif ( ( lastOrigin + 1 ) in nameLocations ) nameIndex = names.indexOf( nameLocations[ lastOrigin + 1 ] );\n\t\t\t}\n\n\t\t\telse if ( ~origin && ( hires || ( ~lastOrigin && origin !== lastOrigin + 1 ) || sourcemapLocations[ origin ] ) ) {\n\t\t\t\tlocation = getLocation( locations, origin );\n\t\t\t}\n\n\t\t\tif ( location ) {\n\t\t\t\tsegments.push({\n\t\t\t\t\tgeneratedCodeColumn: i,\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tsourceCodeLine: location.line,\n\t\t\t\t\tsourceCodeColumn: location.column,\n\t\t\t\t\tsourceCodeName: nameIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlastOrigin = origin;\n\t\t}\n\n\t\tcharOffset += line.length + 1;\n\t\treturn segments;\n\t});\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\toffsets.sourceCodeName = offsets.sourceCodeName || 0;\n\n\tconst encoded = lines.map( segments => {\n\t\tlet generatedCodeColumn = 0;\n\n\t\treturn segments.map( segment => {\n\t\t\tlet arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\tif ( ~segment.sourceCodeName ) {\n\t\t\t\tarr.push( segment.sourceCodeName - offsets.sourceCodeName );\n\t\t\t\toffsets.sourceCodeName = segment.sourceCodeName;\n\t\t\t}\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' );\n\n\treturn encoded;\n}\n\n\nfunction invert ( str, mappings ) {\n\tlet inverted = new Uint32Array( str.length );\n\n\t// initialise everything to -1\n\tlet i = str.length;\n\twhile ( i-- ) {\n\t\tinverted[i] = -1;\n\t}\n\n\t// then apply the actual mappings\n\ti = mappings.length;\n\twhile ( i-- ) {\n\t\tif ( ~mappings[i] ) {\n\t\t\tinverted[ mappings[i] ] = i;\n\t\t}\n\t}\n\n\treturn inverted;\n}\n\nfunction getLocation ( locations, char ) {\n\tlet i = locations.length;\n\twhile ( i-- ) {\n\t\tif ( locations[i] <= char ) {\n\t\t\treturn {\n\t\t\t\tline: i,\n\t\t\t\tcolumn: char - locations[i]\n\t\t\t};\n\t\t}\n\t}\n\n\tthrow new Error( 'Character out of bounds' );\n}\n","import btoa from './btoa';\n\nclass SourceMap {\n\tconstructor ( properties ) {\n\t\tthis.version = 3;\n\n\t\tthis.file           = properties.file;\n\t\tthis.sources        = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names          = properties.names;\n\t\tthis.mappings       = properties.mappings;\n\t}\n\n\ttoString () {\n\t\treturn JSON.stringify( this );\n\t}\n\n\ttoUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n}\n\nexport default SourceMap;\n","let _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t/* global Buffer */\n\t_btoa = str => new Buffer( str ).toString( 'base64' );\n} else {\n\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n}\n\nexport default _btoa;\n","export default function getRelativePath ( from, to ) {\n\tlet fromParts = from.split( /[\\/\\\\]/ );\n\tlet toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tlet i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n"],"names":[],"mappings":"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"}